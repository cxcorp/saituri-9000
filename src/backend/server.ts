import bodyParser from "body-parser";
import express from "express";
import type { Express } from "express";
import { createExpenseGroupApi } from "./expenseGroupApi.js";
import { createMemberApi } from "./memberApi.js";
import basicAuth from "express-basic-auth";
import { BackendContext } from "./context.js";
import { pinoHttp } from "pino-http";

export async function createServer(context: BackendContext, injectRoutes?: (server: Express) => void) {
  const { env, config, logger } = context;
  const { port, basicAuth: basicAuthConfig } = config;

  const server = express();
  server.use(bodyParser.json());

  const httpLogger = pinoHttp({
    logger: context.logger,
  });

  server.use(httpLogger);

  if (basicAuthConfig) {
    const { user, password } = basicAuthConfig;
    logger.info(`Basic auth enabled for user ${user}`);
    server.use(
      basicAuth({
        users: { [user]: password },
        challenge: true,
      }),
    );
  } else if (env === "production") {
    logger.warn(
      "Basic auth is not enabled. Please set BASIC_AUTH_USER and BASIC_AUTH_PASSWORD environment variables to prevent unauthorized access.",
    );
  }

  // Serve bundles generated by Parcel
  server.use("/assets", express.static(config.assetPath, { index: false }));
  // Serve favicon
  server.use("/favicon.ico", express.static("public/favicon.ico"));

  server.get("/api/health", (_, res) => {
    res.send("OK");
  });

  server.use("/api", createExpenseGroupApi(context).handler());
  server.use("/api", createMemberApi(context).handler());

  if (injectRoutes) {
    injectRoutes(server);
  }

  // The "catchall" handler: for any request that doesn't
  // match one above, send back React's index.html file.
  server.get("*", (_, res) => {
    res.sendFile("index.html", { root: config.assetPath });
  });

  return new Promise((resolve) => {
    server.listen(port, () => {
      logger.info(`Server is running at http://localhost:${port}`);
      resolve(server);
    });
  });
}
