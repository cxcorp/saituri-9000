datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

model Member {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  expenses                Expense[]
  sentPayments            Payment[]            @relation("SentPayments")
  receivedPayments        Payment[]            @relation("ReceivedPayments")
  expenseParticipations   ExpenseParticipant[]
  expenseGroupMemberships ExpenseGroupMember[]
}

model ExpenseGroup {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  expenses Expense[]
  payments Payment[]
  members  ExpenseGroupMember[]
}

model ExpenseGroupMember {
  expenseGroup   ExpenseGroup @relation(fields: [expenseGroupId], references: [id])
  expenseGroupId String
  member         Member       @relation(fields: [memberId], references: [id])
  memberId       String
  createdAt      DateTime     @default(now()) @db.Timestamptz(3)
  updatedAt      DateTime     @updatedAt @db.Timestamptz(3)

  @@id([expenseGroupId, memberId])
}

model Expense {
  id             String       @id @default(uuid())
  name           String
  amount         Int
  expenseGroup   ExpenseGroup @relation(fields: [expenseGroupId], references: [id])
  expenseGroupId String
  createdAt      DateTime     @default(now()) @db.Timestamptz(3)
  updatedAt      DateTime     @updatedAt @db.Timestamptz(3)
  paidBy         Member       @relation(fields: [payerId], references: [id])
  payerId        String       @map("createdById")

  participants ExpenseParticipant[]
}

model ExpenseParticipant {
  expense   Expense  @relation(fields: [expenseId], references: [id])
  expenseId String
  member    Member   @relation(fields: [memberId], references: [id])
  memberId  String
  weight    Float    @default(1.0)
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  @@id([expenseId, memberId])
}

model Payment {
  id             String       @id @default(uuid())
  amount         Int
  payer          Member       @relation("SentPayments", fields: [payerId], references: [id])
  payerId        String
  payee          Member       @relation("ReceivedPayments", fields: [payeeId], references: [id])
  payeeId        String
  expenseGroup   ExpenseGroup @relation(fields: [expenseGroupId], references: [id])
  expenseGroupId String
  createdAt      DateTime     @default(now()) @db.Timestamptz(3)
  updatedAt      DateTime     @updatedAt @db.Timestamptz(3)
}
